---
# Create the ArsDigita Community System Oracle database.


# This step seems extra, but I kept getting MEMORY_ERRORS.
# Making 100% sure Oracle was shut down before I start copying
# over the new configuration stuff fixed this. MKB, 9/1/2013
- name: Shutdown oracle.
  service: name=oracle state=stopped pattern={{ ORA_PS_MARKER }}

- command: /usr/bin/test -f {{ ORA_CONTROL_FILE1 }}
  register: our_database_exists
  ignore_errors: True

- name: Copy over oratab with our SID in it.
  template: src=ora_oratab.j2 dest=/etc/oratab
      owner={{ ORACLE_USER }}  group={{ ORACLE_GROUP }} 
  register: oratab

- name: Copy over initialization paramters for ora11
  template: src=ora_init{{SID}}.ora.j2 dest={{ORACLE_HOME}}/dbs/init{{SID}}.ora
      owner={{ ORACLE_USER }}  group={{ ORACLE_GROUP }} 
  register: initora

- name: Create directory to hold data.
  file: path=$DATA_DIR state=directory
  when: our_database_exists|failed

- name: Create directory to hold first set of redo logs.
  file: path=$REDO_DIR1 state=directory
  when: our_database_exists|failed

- name: Create directory to hold second set of redo logs.
  file: path=$REDO_DIR2 state=directory
  when: our_database_exists|failed

- name: Set user.group to oracle.dba on new directories.
  file: path=$ROOT_DIR state=directory owner={{ ORACLE_USER }}  group=dba recurse=yes
  when: our_database_exists|failed

- name: Create audit file directory.
  file: path={{ ORACLE_BASE }}/admin/{{ SID }}/adump state=directory
      owner={{ ORACLE_USER }}  group={{ ORACLE_GROUP }} 
  when: our_database_exists|failed

- name: Set user.group to oracle.dba on audit file directory.
  file: path={{ ORACLE_BASE }}/admin/{{ SID }} state=directory 
      owner={{ ORACLE_USER }}  group=dba recurse=yes
  when: our_database_exists|failed

- name: Copy over script to create the database
  template: src=ora_create.sql.j2 dest={{ ORACLE_USER_HOME }}/create.sql 
      owner={{ ORACLE_USER }}  group={{ ORACLE_GROUP }} 
  when: our_database_exists|failed

- name: Run SQL to create database
  command: su - {{ ORACLE_USER }}  -c "sqlplus /nolog @create.sql > create.sql.log" 
  when: our_database_exists|failed

- name: And start Oracle back up.
  service: name=oracle state=started pattern={{ ORA_PS_MARKER }}
